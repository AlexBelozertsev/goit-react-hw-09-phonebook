{"version":3,"sources":["views/LoginPage.js","components/Title/Title.js","components/Label/Label.js","components/Input/Input.js","components/Form/Form.js","components/Form/Form.module.css"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","useCallback","target","name","value","text","onSubmit","e","preventDefault","authOperations","logIn","alert","autoComplete","type","placeholder","onChange","Title","className","Label","htmlFor","children","defaultProps","Input","id","Form","style","module","exports"],"mappings":"2TASe,SAASA,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAeC,uBAAY,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACzC,UAATD,EAAmBN,EAASO,GAASL,EAAYK,KAChD,IAaH,OACE,gCACE,cAAC,IAAD,CAAOC,KAAM,eACb,eAAC,IAAD,CAAMC,SAdW,SAAAC,GACnBA,EAAEC,iBACGZ,GAAUE,GAIfL,EAASgB,IAAeC,MAAM,CAAEd,QAAOE,cACvCD,EAAS,IACTE,EAAY,KALVY,MAAM,sBAWwBC,aAAc,MAA5C,UACE,cAAC,IAAD,CAAOT,KAAM,UAAb,SACE,cAAC,IAAD,CACEU,KAAM,QACNV,KAAM,QACNC,MAAOR,EACPkB,YAAa,gBACbC,SAAUf,MAId,cAAC,IAAD,CAAOG,KAAM,YAAb,SACE,cAAC,IAAD,CACEU,KAAM,WACNV,KAAM,WACNC,MAAON,EACPgB,YAAa,UACbC,SAAUf,MAId,cAAC,IAAD,CAAQa,KAAM,SAAUR,KAAM,kB,wFCzCvBW,EARD,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACf,OAAO,oBAAIY,UAAU,QAAd,SAAuBZ,M,8GCD1Ba,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAShB,EAAZ,EAAYA,KAAMiB,EAAlB,EAAkBA,SAAlB,OACZ,wBAAOD,QAASA,EAAhB,UACGhB,EADH,IACUiB,MAIZF,EAAMG,aAAe,CACnBF,QAAS,KACThB,KAAM,MASOe,S,yFCjBTI,EAAQ,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMV,EAAT,EAASA,KAAMC,EAAf,EAAeA,MAAOmB,EAAtB,EAAsBA,GAAIT,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,SAAvC,OACZ,uBACEF,KAAMA,EACNV,KAAMA,EACNC,MAAOA,EACPmB,GAAIA,EACJT,YAAaA,EACbC,SAAUA,KAIdO,EAAMD,aAAe,CACnBE,GAAI,KACJT,YAAa,MAYAQ,S,mGCzBTE,EAAO,SAAC,GAAD,IAAGZ,EAAH,EAAGA,aAAcQ,EAAjB,EAAiBA,SAAUd,EAA3B,EAA2BA,SAA3B,OACX,sBAAMM,aAAcA,EAAcK,UAAWQ,IAAMD,KAAMlB,SAAUA,EAAnE,SACGc,KAILI,EAAKH,aAAe,CAClBT,aAAc,MASDY,S,mBCnBfE,EAAOC,QAAU,CAAC,KAAO","file":"static/js/4.7f381cd9.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport Title from '../components/Title';\nimport Form from '../components/Form';\nimport Label from '../components/Label';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = useCallback(({ target: { name, value } }) => {\n    name === 'email' ? setEmail(value) : setPassword(value);\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!email || !password) {\n      alert('Fill In all areas');\n      return;\n    }\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <Title text={'Login Page'} />\n      <Form onSubmit={handleSubmit} autoComplete={'off'}>\n        <Label name={'E-mail:'}>\n          <Input\n            type={'email'}\n            name={'email'}\n            value={email}\n            placeholder={'your@mail.com'}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label name={'Password:'}>\n          <Input\n            type={'password'}\n            name={'password'}\n            value={password}\n            placeholder={'*******'}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Button type={'submit'} text={'Enter'} />\n      </Form>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Title.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ text }) => {\n  return <h2 className=\"Title\">{text}</h2>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\nimport style from './Label.module.css';\nimport PropTypes from 'prop-types';\n\nconst Label = ({ htmlFor, name, children }) => (\n  <label htmlFor={htmlFor}>\n    {name} {children}\n  </label>\n);\n\nLabel.defaultProps = {\n  htmlFor: null,\n  name: null,\n};\n\nLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  name: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport style from './Input.module.css';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ type, name, value, id, placeholder, onChange }) => (\n  <input\n    type={type}\n    name={name}\n    value={value}\n    id={id}\n    placeholder={placeholder}\n    onChange={onChange}\n  />\n);\n\nInput.defaultProps = {\n  id: null,\n  placeholder: null,\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport style from './Form.module.css';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ autoComplete, children, onSubmit }) => (\n  <form autoComplete={autoComplete} className={style.Form} onSubmit={onSubmit}>\n    {children}\n  </form>\n);\n\nForm.defaultProps = {\n  autoComplete: null,\n};\n\nForm.propTypes = {\n  autoComplete: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__LLFEl\"};"],"sourceRoot":""}